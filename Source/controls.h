#ifndef CONTROLS_INCLUDED
#define CONTROLS_INCLUDED

#include <string>

using namespace std;

struct control_info {
    unsigned char action;
    unsigned char player;
    unsigned char type;
    int device_nr;
    int button;
    int stick;
    int axis;
    
    control_info(unsigned char action, unsigned char player, string s);
    string stringify();
};

void handle_game_controls(ALLEGRO_EVENT ev);
void handle_button(unsigned int button, float pos);

enum BUTTONS {
    BUTTON_NONE,
    BUTTON_PUNCH,
    BUTTON_WHISTLE,
    BUTTON_MOVE_RIGHT,
    BUTTON_MOVE_UP,
    BUTTON_MOVE_LEFT,
    BUTTON_MOVE_DOWN,
    BUTTON_MOVE_CURSOR_RIGHT,
    BUTTON_MOVE_CURSOR_UP,
    BUTTON_MOVE_CURSOR_LEFT,
    BUTTON_MOVE_CURSOR_DOWN,
    BUTTON_MOVE_GROUP_RIGHT,
    BUTTON_MOVE_GROUP_UP,
    BUTTON_MOVE_GROUP_LEFT,
    BUTTON_MOVE_GROUP_DOWN,
    BUTTON_MOVE_GROUP_TO_CURSOR,
    BUTTON_SWITCH_CAPTAIN_RIGHT,
    BUTTON_SWITCH_CAPTAIN_LEFT,
    BUTTON_DISMISS,
    BUTTON_USE_SPRAY_1,
    BUTTON_USE_SPRAY_2,
    BUTTON_USE_SPRAY,
    BUTTON_SWITCH_SPRAY_RIGHT,
    BUTTON_SWITCH_SPRAY_LEFT,
    BUTTON_SWITCH_ZOOM,
    BUTTON_ZOOM_IN,
    BUTTON_ZOOM_OUT,
    BUTTON_SWITCH_TYPE_RIGHT,
    BUTTON_SWITCH_TYPE_LEFT,
    BUTTON_SWITCH_MATURITY_UP,
    BUTTON_SWITCH_MATURITY_DOWN,
    BUTTON_LIE_DOWN,
    BUTTON_PAUSE,
};

enum CONTROL_TYPES {
    CONTROL_TYPE_NONE,
    CONTROL_TYPE_KEYBOARD_KEY,
    CONTROL_TYPE_MOUSE_BUTTON,
    CONTROL_TYPE_MOUSE_WHEEL_UP,
    CONTROL_TYPE_MOUSE_WHEEL_DOWN,
    CONTROL_TYPE_MOUSE_WHEEL_LEFT,
    CONTROL_TYPE_MOUSE_WHEEL_RIGHT,
    CONTROL_TYPE_MOUSE_MOVE,
    CONTROL_TYPE_JOYSTICK_BUTTON,
    CONTROL_TYPE_JOYSTICK_AXIS_POS,
    CONTROL_TYPE_JOYSTICK_AXIS_NEG,
};

#endif //ifndef CONTROLS_INCLUDED